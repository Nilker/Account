<?xml version="1.0" encoding="utf-8" ?>
<log4net>
  <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
    <!--file,文件存放位置，可以指定具体的路径 eg : d:\\test.log。不指定的话log被生成在项目的bin/Debug 或者 bin/Release目录下 （web的项目 默认生成在根目录下）-->
    <file value="App_Data\\Logs\\" />
    <appendToFile value="true" />
    <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
    <rollingStyle value="Composite" />
    <!--日志文件名称以输出日期命名，可更改其他日期输出方式yyyy\\yyyyMM\\yyyyMMdd'.log'-->
    <datePattern value="yyyy-MM-dd'.log'" />
    <!--不加utf-8编码格式，中文字符将显示成乱码-->
    <param name="Encoding" value="utf-8" />
    <!--表明输出的日志信息是否一直在同一文件中-->
    <staticLogFileName value="false"/>
    <!--备份log文件的个数最多100个-->
    <maxSizeRollBackups value="100" />
    <!--每个log文件最大是10M，如果超过2M将重新创建一个新的log文件，并将原来的log文件备份。-->
    <maximumFileSize value="100MB" />
    <layout type="log4net.Layout.PatternLayout">
      <!--输出格式-->
      <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
      <conversionPattern value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger 属性:[%property{NDC}] - 记录方法：%method 记录描述：%message%newline" />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="DEBUG"/>
      <param name="LevelMax" value="INFO"/>
    </filter>
  </appender>

  <appender name="ErrorFileAppender" type="log4net.Appender.RollingFileAppender">
    <!--file,文件存放位置，可以指定具体的路径 eg : d:\\test.log。不指定的话log被生成在项目的bin/Debug 或者 bin/Release目录下 （web的项目 默认生成在根目录下）-->
    <file value="App_Data\\Logs\\" />
    <appendToFile value="true" />
    <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
    <rollingStyle value="Composite" />
    <!--日志文件名称以输出日期命名，可更改其他日期输出方式yyyy\\yyyyMM\\yyyyMMdd'.log'-->
    <datePattern value="yyyy-MM-dd'.error.log'" />
    <!--不加utf-8编码格式，中文字符将显示成乱码-->
    <param name="Encoding" value="utf-8" />
    <!--表明输出的日志信息是否一直在同一文件中-->
    <staticLogFileName value="false"/>
    <!--备份log文件的个数最多100个-->
    <maxSizeRollBackups value="100" />
    <!--每个log文件最大是10M，如果超过2M将重新创建一个新的log文件，并将原来的log文件备份。-->
    <maximumFileSize value="100MB" />
    <layout type="log4net.Layout.PatternLayout">
      <!--输出格式-->
      <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
      <conversionPattern value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger 属性:[%property{NDC}] - 记录方法：%method 记录描述：%message%newline" />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="WARN"/>
      <param name="LevelMax" value="FATAL"/>
    </filter>
  </appender>

  <root>
    <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
    <level value="ALL" />
    <appender-ref ref="RollingLogFileAppender"/>
    <appender-ref ref="ErrorFileAppender"/>
  </root>
  <logger name="NHibernate">
    <level value="WARN" />
  </logger>
</log4net>
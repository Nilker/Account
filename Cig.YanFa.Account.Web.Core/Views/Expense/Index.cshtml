@{
    ViewBag.Title = "费用信息";
}

@section Scripts
    {
    <script src="~/lib/vue/dist/vue.js"></script>
    <script src="~/lib/vue/dist/vue-router.js"></script>
    <script src="~/lib/vue/dist/polyfill.js"></script>
    <script src="~/lib/vue/dist/lodash.js"></script>
    <script src="~/lib/vue/dist/axios.js"></script>
    <script src="~/lib/vue/dist/axiosExt.js"></script>
    <link href="~/lib/vue/dist/el-index.css" rel="stylesheet" />
    <script src="~/lib/vue/dist/el-index.js"></script>
    <link href="~/lib/vue/dist/vxe-table/index.css" rel="stylesheet" />
    <script src="~/lib/vue/dist/vxe-table/xe-utils.js"></script>
    <script src="~/lib/vue/dist/vxe-table/index.js"></script>
    <style>
        .el-input--mini {
            width: 240px;
        }

        .el-autocomplete {
            width: 240px;
        }

        .my-autocomplete {
            width: 00px;
        }

            .my-autocomplete li {
                line-height: normal;
                padding: 7px;
            }

                .my-autocomplete li .name {
                    overflow: hidden;
                    text-overflow: ellipsis;
                }

                .my-autocomplete li .addr {
                    color: #b4b4b4;
                    font-size: 12px;
                }

                .my-autocomplete li .highlighted .addr {
                    color: #ddd;
                }

        .upload-demo {
            position: relative;
            left: 260px;
            top: -16px;
        }
        .cxList {
            margin: 0px 0px;
        }
    </style>

    <script type="text/javascript">
        //创建变量对象，
        // 创建变量对象
        let comDatalist = {
            template: '#temp-dataListOfPage',
            props: ['splitData'],
            data:function () {
                return{
                    tableHeader: [
                        { name: '流水单号',key: 'expenseCode',width:'80'},
                        { name: '行号', key: 'expenseLineNum', width: '50' },
                        { name: '核算期间', key: 'period', width: '80' },
                        { name: '计入部门', key: 'departNamePath', width: '300' },
                        { name: '计入金额', key: 'amount', width: '100' },
                        { name: '项目名称', key: 'projectName', width: '' },
                        { name: '签约公司', key: 'companyName', width: '' },
                        { name: '阶段', key: 'stepName', width: '120' },

                    ],
                }
            },
           
           };
        window.onload = function () {
            const vm = new Vue({
                el: "#app",
                data() {
                    return {
                        period: new Date().getFullYear().toString() +
                            "-" +
                            new Date().getMonth().toString().padStart(2, "0"),
                        splitData: [], //拆分后数据
                        steps: [], //计算阶段
                        expenseTypes: [], //费用类型
                        pOCode: "",
                        projectName: "",
                        departNamePath: "",
                        selectStep: "",
                        selectExpenseType: "1",
                        selectExpenseTypeName:"火车月结",
                        currentPage: 1,//当前页码
                        pageSize: 10,//默认每页多少条数据
                        dataTotal: 0,//总共多少条数据
                        txtBefore: "计算拆分前",
                        btnLoadBefore: false,
                        btnLoadAfter: false,
                        btnDisBefore: false,
                        btnDisAfter:false,
                        txtAfter: "计算拆分后",
                        summary:"",//汇总 校验信息
                    }
                },
                components:{
                    // 在外部声明变量，使用代码简洁
                    comDatalist,
                },
                created() {
                    this.getExpenseTypes();
                    this.getSteps();
                },
                watch: {
                },
                mounted() {
                    this.getExpenseSplitData();
                },
                methods: {
                    //费用类型
                    getExpenseTypes() {
                        axios.get('GetExpenseType')
                            .then((res) => {
                                this.expenseTypes = res.data.data;
                            });
                    },
                    //费用类型
                    getSteps() {
                        axios.get('GetSteps')
                            .then((res) => {
                                this.steps = res.data.data;
                            });
                    },
                    //拆分后查询数据
                    getExpenseSplitData() {
                        let da = {
                            Period: this.period, POCode: this.pOCode, ProjectName: this.projectName, DepartNamePath: this.departNamePath, Step: this.selectStep, ExpenseType: this.selectExpenseType
                            , CurrentPage: 1, PageSize: this.pageSize
                        };
                        axios.post('GetListDatas', (da))
                            .then((res) => {
                                this.splitData = res.data.data;
                                this.dataTotal = res.data.recordsTotal;
                            });
                        this.getSummary();
                    },
                    //根据条件获取 校验信息，状态汇总和
                    getSummary() {
                        let da = {
                            Period: this.period, POCode: this.pOCode, ProjectName: this.projectName, DepartNamePath: this.departNamePath, ExpenseType: this.selectExpenseType
                        };
                        axios.post('GetSummary', (da))
                            .then((res) => {
                                if (res.data.length > 0) {
                                    var s1 = res.data.find(function(el) {return el.step == 1;});
                                    var s2 = res.data.find(function(el) {return el.step == 2;});
                                    var s3 = res.data.find(function(el) {return el.step == 3;});
                                    var s4 = res.data.find(function(el) {return el.step == 4;});
                                    this.summary = "校验信息：拆分前：" + s1.summary + " 元，公共拆分：" + (s2 == undefined ? 0 : s2.summary) + " 元，定向拆分：" + (s3 == undefined ? 0 : s3.summary) + " 元，转管理拆分：" + (s4 == undefined ? 0 : s4.summary) + " 元";
                                } else {
                                    this.summary = "";
                                }
                            });
                    },
                    //处理页码大小
                    handleSizeChange(val) {
                        this.pageSize = val;
                        this.getExpenseSplitData();
                    },
                    //当前页变动时候触发的事件
                    handleCurrentChange(val) {
                        this.currentPage = val;
                        this.getExpenseSplitData();
                    },
                    //拆分前
                    splitBefore() {
                        this.$alert('您确定进行，'+this.selectExpenseTypeName+'（'+this.period+'），拆分前，操作？', '提示', {
                            confirmButtonText: '确定',
                            cancelButtonText: '取消',
                            type: 'warning',
                            callback: action => {
                                if (action == "confirm")
                                {
                                    this.txtBefore = "处理中";
                                    this.btnLoadBefore = true;
                                    this.btnDisBefore = true;
                                    axios.get("splitBefore?expenseType=" + this.selectExpenseType + "&period=" + this.period).then((res) => {
                                        if (res.data.flag == 1) {
                                            this.getExpenseSplitData();
                                        }
                                        this.txtBefore = res.data.flag == 1 ? "拆分成功" : "拆分失败";
                                        this.btnLoadBefore = false;
                                        this.$XMsg.alert(res.data.msg);
                                    });
                                }
                            }
                        });
                    },
                    //拆分后
                    splitAfter() {
                        this.$alert('您确定进行，' + this.selectExpenseTypeName + '（' + this.period +'），拆分后，操作？','提示',{
                                confirmButtonText: '确定',
                                cancelButtonText: '取消',
                                type: 'warning',
                                callback: action => {
                                    if (action == "confirm") {
                                        this.txtAfter = "处理中";
                                        this.btnLoadAfter = true;
                                        this.btnDisAfter = true;
                                        axios.get("splitAfter?expenseType=" + this.selectExpenseType +"&period="+this.period).then((res) => {
                                            if (res.data.flag == 1) {
                                                this.getExpenseSplitData();
                                            }
                                            this.txtAfter = res.data.flag == 1 ? "拆分成功" : "拆分失败";
                                            this.btnLoadAfter = false;
                                            this.$XMsg.alert(res.data.msg);
                                        });
                                    }
                                }
                            });

                    },
                    //导出
                    exportA(url) {
                        var period = this.period;
                        if (!period) {
                            this.$XMsg.alert("请选择日期版本");
                            return false;
                        }
                        window.location.href = url + '?period=' + period+'&expenseType='+this.selectExpenseType;
                    },
                    //上传图片成功
                    onSuccess(response, file, fileList) {
                        this.$alert(response.msg,"提示", { dangerouslyUseHTMLString: true});
                    },
                    //上传前文件格式校验
                    beforeAvatarUpload(file) {
                        const isXlsx = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
                        if (!isXlsx) {
                            this.$message.error('上传文档格式必须为：xlsx');
                        }
                        return isXlsx;
                    },
                    //tab切换
                    tabClick(tab, event) {
                        this.selectExpenseTypeName = tab.label;
                        this.selectExpenseType = tab.name;
                        this.currentPage = 1;
                        this.getExpenseSplitData();
                    }
                }
            });
        }

    </script>

    <template  id="temp-dataListOfPage">
        <!--数据内容开始-->
        <div id="divDataList" class="cxList">
            @*<el-pagination style="float: right"
                       :hide-on-single-page="dataTotal==0"
                       v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[10, 25, 50]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="dataTotal">
        </el-pagination>*@
            <el-table :data="splitData" size="mini" border fit style="width: 100%">
                <el-table-column :prop="item.key" :width="item.width" :label="item.name" v-for="item in
            tableHeader" :key="item.key">
                </el-table-column>
            </el-table>
        </div>
    </template>
}

<div class="searchTj">
    <form id="queryForm">
        <ul>
            <li>
                <label>
                    核算期间：
                </label>
                <el-date-picker v-model="period" value-format="yyyy-MM" type="month" size="mini" placeholder="选择月"></el-date-picker>

            </li>
            <li style="">
                <label>
                    流水单号：
                </label>
                <el-input v-model="pOCode" size="mini" placeholder="请输入内容"></el-input>
            </li>
            <li>
                <label>
                    项目名称：
                </label>
                <el-input v-model="projectName" size="mini" placeholder="请输入内容"></el-input>
            </li>
            <li>
                <label>
                    计入部门：
                </label>
                <el-input v-model="departNamePath" size="mini" placeholder="模糊查找部门名称"></el-input>
            </li>
            <li>
                <label>
                    计算阶段：
                </label>
                <el-select v-model="selectStep" size="mini" clearable placeholder="请选择">
                    <el-option v-for="item in steps" :key="item.key"
                               :label="item.value" :value="item.key">
                    </el-option>
                </el-select>
            </li>

            @*<li>
                    <label>
                        费用类型：
                    </label>
                    <el-select v-model="selectExpenseType" size="mini" clearable placeholder="请选择">
                        <el-option v-for="item in expenseTypes" :key="item.key"
                                   :label="item.value" :value="item.key">
                        </el-option>
                    </el-select>
                </li>*@

        </ul>

        <div class="tjBtn right">
            <el-button type="primary" plain size="mini" v-on:click.once="splitBefore" :loading="btnLoadBefore" :disabled="btnDisBefore" >{{txtBefore}}</el-button>
            <el-button type="primary" plain size="mini" v-on:click.once="splitAfter" :loading="btnLoadAfter" :disabled="btnDisAfter">{{txtAfter}}</el-button>
            <el-button type="primary" size="mini" v-on:click="getExpenseSplitData">查询</el-button>
        </div>
        <div class="clearfix">
        </div>
    </form>
</div>
<br />

<!--上部分页开始-->
<div class="cxPage">
    <!--左侧功能栏：待处理权限是否有添加-->
    <div class="dcList left">
        <img align="absmiddle" src="/images/dc.png" style="margin-left: 10px" />
        <a style="cursor: pointer; margin-left: 0px; margin-right: 10px;" v-on:click="exportA('ExportHistory')" href="javascript:void(0)">导出月费用原始</a>

        <img align="absmiddle" src="/images/dc.png" style="margin-left: 10px" />
        <a style="cursor: pointer; margin-left: 0px; margin-right: 10px;" v-on:click="exportA('ExportSplit')" href="javascript:void(0)">导出拆分结果</a>

        <el-upload size="mini" class="upload-demo"
                   :show-file-list="true"
                   :limit="1"
                   accept=".xls,.xlsx"
                   :on-success="onSuccess"
                   :before-upload="beforeAvatarUpload"
                   action="FileSave">
            <img align="absmiddle" src="/images/dc.png" style="margin-left: 10px" />
            <a style="cursor: pointer; margin-left: 0px; margin-right: 10px;" href="javascript:void(0)">导入固资折旧</a>
        </el-upload>
    </div>
</div>

<div class="clearfix">
</div>

<el-alert :title="summary" type="error" center v-if="summary.length>0"></el-alert><!--上部分页结束-->
<el-tabs type="border-card" v-model="selectExpenseType" style="margin: 0 10px" v-on:tab-click="tabClick">
    <el-tab-pane :label="item.value" :name="item.key+''" v-for="item in expenseTypes" :key="item.key">
        <com-datalist :split-data="splitData" :current-page="currentPage" :page-size="pageSize" :data-total="dataTotal" v-if="item.key.toString()==selectExpenseType" ></com-datalist>
        <el-pagination style="float: right"
                       :hide-on-single-page="dataTotal==0"
                       v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[10, 25, 50]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="dataTotal" v-if="item.key.toString()==selectExpenseType">
        </el-pagination>
    </el-tab-pane>
</el-tabs>

